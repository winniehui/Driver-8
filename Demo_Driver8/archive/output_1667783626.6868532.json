{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "self = <pywinauto.application.Application object at 0x000001FE28226250>, cmd_line = 'C:\\\\ZD8-6-5-26122\\\\PrnInst.exe', timeout = 10.0\nretry_interval = 0.9, create_new_console = False, wait_for_idle = True, work_dir = None\n\n    def start(self, cmd_line, timeout=None, retry_interval=None,\n              create_new_console=False, wait_for_idle=True, work_dir=None):\n        \"\"\"Start the application as specified by cmd_line\"\"\"\n        # try to parse executable name and check it has correct bitness\n        if '.exe' in cmd_line and self.backend.name == 'win32':\n            exe_name = cmd_line.split('.exe')[0] + '.exe'\n            _warn_incorrect_binary_bitness(exe_name)\n    \n        if timeout is None:\n            timeout = Timings.app_start_timeout\n        if retry_interval is None:\n            retry_interval = Timings.app_start_retry\n    \n        start_info = win32process.STARTUPINFO()\n    \n        # we need to wrap the command line as it can be modified\n        # by the function\n        command_line = cmd_line\n    \n        # Actually create the process\n        dw_creation_flags = 0\n        if create_new_console:\n            dw_creation_flags = win32con.CREATE_NEW_CONSOLE\n        try:\n>           (h_process, _, dw_process_id, _) = win32process.CreateProcess(\n                None, \t\t\t\t\t# module name\n                command_line,\t\t\t# command line\n                None, \t\t\t\t\t# Process handle not inheritable.\n                None, \t\t\t\t\t# Thread handle not inheritable.\n                0, \t\t\t\t\t\t# Set handle inheritance to FALSE.\n                dw_creation_flags,\t\t# Creation flags.\n                None, \t\t\t\t\t# Use parent's environment block.\n                work_dir,\t\t\t\t# If None - use parent's starting directory.\n                start_info)\t\t\t\t# STARTUPINFO structure.\nE               pywintypes.error: (740, 'CreateProcess', 'The requested operation requires elevation.')\n\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\pywinauto\\application.py:1038: error\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <SubRequest 'install_setup' for <TestCaseFunction test_install_1___ZDesigner_ZQ310_Plus__ZPL____480__762__5__10__480__10100__20__128___1_2_3_4_5____0_30___3_>>\n\n    @pytest.fixture(scope=\"class\")\n    def install_setup(request):\n        packpath = \"C:\\\\ZD8-6-5-26122\\\\\"\n        packname = \"PrnInst.exe\"\n        print(\"enter install setup\")\n>       appi = Application(backend=\"uia\").start(packpath + packname)\n\ntestcases\\conftest.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pywinauto.application.Application object at 0x000001FE28226250>, cmd_line = 'C:\\\\ZD8-6-5-26122\\\\PrnInst.exe', timeout = 10.0\nretry_interval = 0.9, create_new_console = False, wait_for_idle = True, work_dir = None\n\n    def start(self, cmd_line, timeout=None, retry_interval=None,\n              create_new_console=False, wait_for_idle=True, work_dir=None):\n        \"\"\"Start the application as specified by cmd_line\"\"\"\n        # try to parse executable name and check it has correct bitness\n        if '.exe' in cmd_line and self.backend.name == 'win32':\n            exe_name = cmd_line.split('.exe')[0] + '.exe'\n            _warn_incorrect_binary_bitness(exe_name)\n    \n        if timeout is None:\n            timeout = Timings.app_start_timeout\n        if retry_interval is None:\n            retry_interval = Timings.app_start_retry\n    \n        start_info = win32process.STARTUPINFO()\n    \n        # we need to wrap the command line as it can be modified\n        # by the function\n        command_line = cmd_line\n    \n        # Actually create the process\n        dw_creation_flags = 0\n        if create_new_console:\n            dw_creation_flags = win32con.CREATE_NEW_CONSOLE\n        try:\n            (h_process, _, dw_process_id, _) = win32process.CreateProcess(\n                None, \t\t\t\t\t# module name\n                command_line,\t\t\t# command line\n                None, \t\t\t\t\t# Process handle not inheritable.\n                None, \t\t\t\t\t# Thread handle not inheritable.\n                0, \t\t\t\t\t\t# Set handle inheritance to FALSE.\n                dw_creation_flags,\t\t# Creation flags.\n                None, \t\t\t\t\t# Use parent's environment block.\n                work_dir,\t\t\t\t# If None - use parent's starting directory.\n                start_info)\t\t\t\t# STARTUPINFO structure.\n        except Exception as exc:\n            # if it failed for some reason\n            message = ('Could not create the process \"%s\"\\n'\n                       'Error returned by CreateProcess: %s') % (cmd_line, str(exc))\n>           raise AppStartError(message)\nE           pywinauto.application.AppStartError: Could not create the process \"C:\\ZD8-6-5-26122\\PrnInst.exe\"\nE           Error returned by CreateProcess: (740, 'CreateProcess', 'The requested operation requires elevation.')\n\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\pywinauto\\application.py:1052: AppStartError\n", "test_name": "test_install_1___ZDesigner_ZQ310_Plus__ZPL____480__762__5__10__480__10100__20__128___1_2_3_4_5____0_30___3_", "rerun": "0"}}, "suite_name": "testcases/test_InstallPrinter.py"}}}, "date": "November 07, 2022", "start_time": 1667783563.9611418, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}